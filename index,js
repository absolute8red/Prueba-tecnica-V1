const axios = require('axios');
const fs = require('fs');

// URL base del sandbox de T1Pagos
const BASE_URL = 'https://api.sandbox.claropagos.com/v1';

// Leer el token desde el archivo Token_Autorizacion.txt
const token = fs.readFileSync('Token_Autorizacion.txt', 'utf-8').trim();

// Cabecera de autenticación
const headers = {
    'Authorization': `Bearer ${token}`,
    'Content-Type': 'application/json'
};

// Función para realizar una transacción de Cargo Autorizado
async function cargoAutorizado() {
    const data = {
        tarjeta: '4111111111111111',  // Tarjeta de prueba
        monto: 1000,  // Monto en centavos
        moneda: 'MXN',
        descripcion: 'Cargo Autorizado de prueba'
    };

    try {
        const response = await axios.post(BASE_URL, data, { headers });
        console.log('Cargo Autorizado:', response.data);
    } catch (error) {
        console.error('Error en Cargo Autorizado:', error.response ? error.response.data : error.message);
    }
}

// Función para realizar una transacción de Cargo Rechazado
async function cargoRechazado() {
    const data = {
        tarjeta: '4222222222222220',  // Tarjeta de prueba rechazada
        monto: 1000,
        moneda: 'MXN',
        descripcion: 'Cargo Rechazado de prueba'
    };

    try {
        const response = await axios.post(BASE_URL, data, { headers });
        console.log('Cargo Rechazado:', response.data);
    } catch (error) {
        console.error('Error en Cargo Rechazado:', error.response ? error.response.data : error.message);
    }
}

// Función para cancelar un cargo previamente autorizado
async function cancelacionCargo(cargoId) {
    const url = `${BASE_URL}/cargo/${cargoId}/cancelar`; // cargoId es el ID del cargo autorizado

    try {
        const response = await axios.post(url, {}, { headers });
        console.log('Cancelación de Cargo:', response.data);
    } catch (error) {
        console.error('Error en Cancelación de Cargo:', error.response ? error.response.data : error.message);
    }
}

// Función para realizar el reembolso de un cargo autorizado
async function reembolsoCargo(cargoId) {
    const url = `${BASE_URL}/cargo/${cargoId}/reembolsar`; // cargoId es el ID del cargo autorizado

    try {
        const response = await axios.post(url, {}, { headers });
        console.log('Reembolso:', response.data);
    } catch (error) {
        console.error('Error en Reembolso:', error.response ? error.response.data : error.message);
    }
}

// Llamada a las funciones
cargoAutorizado();
cargoRechazado();
// Para cancelar o reembolsar, se necesitará el ID del cargo autorizado, que se obtiene de la respuesta
// cancelacionCargo('ID_DE_CARGO');
// reembolsoCargo('ID_DE_CARGO');
